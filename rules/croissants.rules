# Author    : Samiux (https://www.infosec-ninjas.com)
# License   : GPLv3
#
# 1010000-1049999 Reserved for CROISSANTS Use -- Put your Croissants rules in this range to avoid conflicts

# disallow ping from internet
drop tcp $EXTERNAL_NET any -> $HOME_NET any (msg:"CROISSANTS ICMP PING"; dsize: 0; itype: 8; priority:1; classtype: network-scan; sid:1010000; rev:2;)

# reserved 1010001 - 1010005

# allow ping from intranet
alert tcp $HOME_NET any -> $HOME_NET any (msg:"CROISSANTS ICMP PING"; dsize: 0; itype: 8; priority:1; classtype: network-scan; sid:1010006; rev:2;)

# rules for file extraction
# this rule drop all the file that matches the clamav md5 hash
reject tcp $EXTERNAL_NET any -> $HOME_NET any (msg:"CROISSANTS Malicious file - Clamav MD5 Hash"; flow:established; fileext:"exe"; filestore; filemd5:clamav_md5; classtype: suspicious-filename-detect; sid:1010007; rev:4;)
reject tcp $EXTERNAL_NET any -> $HOME_NET any (msg:"CROISSANTS Malicious file - LMD MD5 Hash"; flow:established; fileext:!"iso"; filestore; filemd5:lmd_md5; classtype: suspicious-filename-detect; sid:1010008; rev:3;)

# self-signed-cert
alert tls $EXTERNAL_NET any -> $HOME_NET any (msg:"CROISSANTS TLS Self Signed Certificate"; flow:established; lua:self-signed-cert.lua; tls.store; classtype:protocol-command-decode; sid:1010009; rev:2;)

# ssh (port 5228=Google Talk, port 6697=IRC)
#alert tcp $EXTERNAL_NET any -> any 22 (msg:"CROISSANTS SSH connect"; flow:established,to_server; app-layer-protocol:ssh; sid:1010010; rev:1;)
drop tcp $EXTERNAL_NET any -> any 22 (msg:"CROISSANTS not SSH but Port 22"; flow:established,to_server; app-layer-protocol:!ssh; sid:1010011; rev:1;)
drop tcp $EXTERNAL_NET any -> any !22 (msg:"CROISSANTS SSH but not Port 22"; flow:established,to_server; app-layer-protocol:ssh; sid:1010012; rev:2;)

# tls
drop tcp $EXTERNAL_NET any -> any 443 (msg:"CROISSANTS Port 443 but not TLS"; flow:to_server; app-layer-protocol:!tls; sid:1010013; rev:1;)
alert tcp $EXTERNAL_NET any -> any !443 (msg:"CROISSANTS TLS but not Port 443"; flow:to_server; app-layer-protocol:tls; sid:1010014; rev:6;)

# http
drop tcp $EXTERNAL_NET any -> any [80,8080] (msg:"CROISSANTS Port 80,8080 but not HTTP"; flow:to_server; app-layer-protocol:!http; sid:1010015; rev:1;)
alert tcp $EXTERNAL_NET any -> any ![80,8080] (msg:"CROISSANTS HTTP but not Port 80,8080"; flow:to_server; app-layer-protocol:http; sid:1010016; rev:1;)

# dns
drop tcp $EXTERNAL_NET any -> any 53 (msg:"CROISSANTS TCP port 53 but not DNS"; flow:to_server; app-layer-protocol:!dns; sid:1010017; rev:1;)
drop udp $EXTERNAL_NET any -> any 53 (msg:"CROISSANTS UDP port 53 but not DNS"; flow:to_server; app-layer-protocol:!dns; sid:1010018; rev:1;)

# private/public keys
alert tcp $EXTERNAL_NET any -> $HOME_NET any (msg:"CROISSANTS HTTP Outgoing Private Key"; filemagic:"RSA private key"; filestore; sid:1010019; rev:2;)
alert tcp $EXTERNAL_NET any -> $HOME_NET any (msg:"CROISSANTS HTTP Outgoing Public Key"; filemagic:"RSA public key"; filestore; sid:1010020; rev:2;)

# ftp
alert tcp $EXTERNAL_NET any -> any ![20,21] (msg:"CROISSANTS FTP but not tcp port 20 or 21"; flow:to_server; app-layer-protocol:ftp; sid:1010021; rev:1;)
alert tcp $EXTERNAL_NET any -> any [20,21] (msg:"CROISSANTS TCP port 21 but not FTP"; flow:to_server; app-layer-protocol:!ftp; sid:1010022; rev:1;)

# smtp
alert tcp $EXTERNAL_NET any -> any ![25,587,465] (msg:"CROISSANTS SMTP but not tcp port 25,587,465"; flow:to_server; app-layer-protocol:smtp; sid:1010023; rev:1;)
alert tcp $EXTERNAL_NET any -> any [25,587,465] (msg:"CROISSANTS TCP port 25,587,465 but not SMTP"; flow:to_server; app-layer-protocol:!smtp; sid:1010024; rev:1;)

# imap
alert tcp $EXTERNAL_NET any -> any !143 (msg:"CROISSANTS IMAP but not tcp port 143"; flow:to_server; app-layer-protocol:imap; sid:1010025; rev:1;)
alert tcp $EXTERNAL_NET any -> any 143 (msg:"CROISSANTS TCP port 143 but not IMAP"; flow:to_server; app-layer-protocol:!imap; sid:1010026; rev:1;)

# smb
alert tcp $EXTERNAL_NET any -> any 139 (msg:"CROISSANTS TCP port 139 but not SMB"; flow:to_server; app-layer-protocol:!smb; sid:1010027; rev:1;)

# dcerpc
alert tcp $EXTERNAL_NET any -> any [80,8080] (msg:"CROISSANTS DCERPC detected over port tcp 80,8080"; flow:to_server; app-layer-protocol:dcerpc; sid:1010028; rev:1;)

# resevered 1010029

# icmp (large and base64)
# reference : https://www.notsosecure.com/2015/10/15/icmp-tunnels-a-case-study/
drop icmp $EXTERNAL_NET any -> $HOME_NET any (msg:"CROISSANTS ICMP Large ICMP Packet (Base64)"; dsize:>800; content:"="; pcre:"/^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=|[A-Za-z0-9+/]{4})$/";  reference:url,www.notsosecure.com/2015/10/15/icmp-tunnels-a-case-study/; classtype:bad-unknown; sid:1010030; rev:1;)

# IP Reputation - Blacklisted Hosts
drop ip $EXTERNAL_NET any -> $HOME_NET any (msg:"CROISSANTS IP Reputation - Blacklisted Hosts"; iprep:any,blacklist,>,9; priority:1; sid:1010031; rev:1;)

####
#### Same rules as above, but with difference direction and action. #####
# allow ping to any
alert tcp $HOME_NET any -> any any (msg:"CROISSANTS ICMP PING"; dsize: 0; itype: 8; classtype: network-scan; sid:1010032; rev:1;)

# resevered 1010033 - 1010037

# rules for file extraction
# this rule drop all the file that matches the clamav md5 hash
reject http $HOME_NET any -> any any (msg:"CROISSANTS Malicious file - Clamav MD5 Hash"; flow:established; fileext:"exe"; filestore; filemd5:clamav_md5; classtype: suspicious-filename-detect; sid:1010038; rev:3;)
reject http $HOME_NET any -> any any (msg:"CROISSANTS Malicious file - LMD MD5 Hash"; flow:established; fileext:!"iso"; filestore; filemd5:lmd_md5; classtype: suspicious-filename-detect; sid:1010039; rev:2;)

# self-signed-cert
drop tls $HOME_NET any -> $EXTERNAL_NET any (msg:"CROISSANTS TLS Self Signed Certificate"; flow:established; lua:self-signed-cert.lua; tls.store; classtype:protocol-command-decode; sid:1010040; rev:2;)

# ssh (port 5228=Google Talk, port 6697=IRC)
#alert tcp $HOME_NET any -> any 22 (msg:"CROISSANTS SSH connect"; flow:established,to_server; app-layer-protocol:ssh; sid:1010041; rev:1;)
alert tcp $HOME_NET any -> any 22 (msg:"CROISSANTS not SSH but Port 22"; flow:established,to_server; app-layer-protocol:!ssh; sid:1010042; rev:1;)
alert tcp $HOME_NET any -> any !22 (msg:"CROISSANTS SSH but not Port 22"; flow:established,to_server; app-layer-protocol:ssh; sid:1010043; rev:1;)

# tls
drop tcp $HOME_NET any -> any [443,853,7275,6697] (msg:"CROISSANTS Port 443 but not TLS"; flow:to_server; app-layer-protocol:!tls; sid:1010044; rev:5;)
alert tcp $HOME_NET any -> any ![443,853,7275,6697] (msg:"CROISSANTS TLS but not Port 443/853/7275/6697"; flow:to_server; app-layer-protocol:tls; sid:1010045; rev:5;)

# http
drop tcp $HOME_NET any -> any [80,8080] (msg:"CROISSANTS Port 80,8080 but not HTTP"; flow:to_server; app-layer-protocol:!http; sid:1010046; rev:2;)
alert tcp $HOME_NET any -> any ![80,8080] (msg:"CROISSANTS HTTP but not Port 80,8080"; flow:to_server; app-layer-protocol:http; sid:1010047; rev:1;)

# dns
drop tcp $HOME_NET any -> any 53 (msg:"CROISSANTS TCP port 53 but not DNS"; flow:to_server; app-layer-protocol:!dns; sid:1010048; rev:1;)
drop udp $HOME_NET any -> any 53 (msg:"CROISSANTS UDP port 53 but not DNS"; flow:to_server; app-layer-protocol:!dns; sid:1010049; rev:1;)

# private/public keys
alert tcp $HOME_NET any -> any any (msg:"CROISSANTS HTTP Outgoing Private Key"; filemagic:"RSA private key"; filestore; sid:1010050; rev:2;)
alert tcp $HOME_NET any -> any any (msg:"CROISSANTS HTTP Outgoing Public Key"; filemagic:"RSA public key"; filestore; sid:1010051; rev:2;)

# ftp
alert tcp $HOME_NET any -> any ![20,21] (msg:"CROISSANTS FTP but not tcp port 20 or 21"; flow:to_server; app-layer-protocol:ftp; sid:1010052; rev:1;)
alert tcp $HOME_NET any -> any [20,21] (msg:"CROISSANTS TCP port 21 but not FTP"; flow:to_server; app-layer-protocol:!ftp; sid:1010053; rev:1;)

# smtp
alert tcp $HOME_NET any -> any ![25,587,465] (msg:"CROISSANTS SMTP but not tcp port 25,587,465"; flow:to_server; app-layer-protocol:smtp; sid:1010054; rev:1;)
alert tcp $HOME_NET any -> any [25,587,465] (msg:"CROISSANTS TCP port 25,587,465 but not SMTP"; flow:to_server; app-layer-protocol:!smtp; sid:1010055; rev:1;)

# imap
alert tcp $HOME_NET any -> any !143 (msg:"CROISSANTS IMAP but not tcp port 143"; flow:to_server; app-layer-protocol:imap; sid:1010056; rev:1;)
alert tcp $HOME_NET any -> any 143 (msg:"CROISSANTS TCP port 143 but not IMAP"; flow:to_server; app-layer-protocol:!imap; sid:1010057; rev:1;)

# smb
alert tcp $HOME_NET any -> any 139 (msg:"CROISSANTS TCP port 139 but not SMB"; flow:to_server; app-layer-protocol:!smb; sid:1010058; rev:1;)

# dcerpc
alert tcp $HOME_NET any -> any [80,8080] (msg:"CROISSANTS DCERPC detected over port tcp 80,8080"; flow:to_server; app-layer-protocol:dcerpc; sid:1010059; rev:1;)

# reserved 1010060

# icmp (large and base64)
# reference : https://www.notsosecure.com/2015/10/15/icmp-tunnels-a-case-study/
drop icmp $HOME_NET any -> any any (msg:"CROISSANTS ICMP Large ICMP Packet (Base64)"; dsize:>800; content:"="; pcre:"/^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=|[A-Za-z0-9+/]{4})$/";  reference:url,www.notsosecure.com/2015/10/15/icmp-tunnels-a-case-study/; classtype:bad-unknown; sid:1010061; rev:1;)

# IP Reputation - Blacklisted Hosts
drop ip $HOME_NET any -> any any (msg:"CROISSANTS IP Reputation - Blacklisted Hosts"; iprep:any,blacklist,>,9; priority:1; sid:1010062; rev:2;)
#####
#####

# Quantum Insert by NSA
drop tcp any any -> any any (msg:"CROISSANTS Quantum Insert 302 and possible inject"; stream-event:reassembly_overlap_different_data; content:"302"; http_stat_code; classtype:protocol-command-decode; sid:1010063; rev:1;)

# reserved 1010064 - 1010065

# ClamAV MD5 continue 
reject tcp $EXTERNAL_NET any -> $HOME_NET any (msg:"CROISSANTS Malicious file - Clamav MD5 Hash"; flow:established; fileext:"dll"; filestore; filemd5:clamav_md5; classtype: suspicious-filename-detect; sid:1010066; rev:2;)
reject tcp $EXTERNAL_NET any -> $HOME_NET any (msg:"CROISSANTS Malicious file - Clamav MD5 Hash"; flow:established; fileext:"msi"; filestore; filemd5:clamav_md5; classtype: suspicious-filename-detect; sid:1010067; rev:2;)
reject tcp $EXTERNAL_NET any -> $HOME_NET any (msg:"CROISSANTS Malicious file - Clamav MD5 Hash"; flow:established; fileext:"zip"; filestore; filemd5:clamav_md5; classtype: suspicious-filename-detect; sid:1010068; rev:2;)
reject tcp $EXTERNAL_NET any -> $HOME_NET any (msg:"CROISSANTS Malicious file - Clamav MD5 Hash"; flow:established; fileext:"rar"; filestore; filemd5:clamav_md5; classtype: suspicious-filename-detect; sid:1010069; rev:2;)
reject tcp $EXTERNAL_NET any -> $HOME_NET any (msg:"CROISSANTS Malicious file - Clamav MD5 Hash"; flow:established; fileext:"tar.gz"; filestore; filemd5:clamav_md5; classtype: suspicious-filename-detect; sid:1010070; rev:2;)
reject tcp $EXTERNAL_NET any -> $HOME_NET any (msg:"CROISSANTS Malicious file - Clamav MD5 Hash"; flow:established; fileext:"7z"; filestore; filemd5:clamav_md5; classtype: suspicious-filename-detect; sid:1010071; rev:2;)

reject tcp $HOME_NET any -> any any (msg:"CROISSANTS Malicious file - Clamav MD5 Hash"; flow:established; fileext:"dll"; filestore; filemd5:clamav_md5; classtype: suspicious-filename-detect; sid:1010072; rev:2;)
reject tcp $HOME_NET any -> any any (msg:"CROISSANTS Malicious file - Clamav MD5 Hash"; flow:established; fileext:"msi"; filestore; filemd5:clamav_md5; classtype: suspicious-filename-detect; sid:1010073; rev:2;)
reject tcp $HOME_NET any -> any any (msg:"CROISSANTS Malicious file - Clamav MD5 Hash"; flow:established; fileext:"zip"; filestore; filemd5:clamav_md5; classtype: suspicious-filename-detect; sid:1010074; rev:2;)
reject tcp $HOME_NET any -> any any (msg:"CROISSANTS Malicious file - Clamav MD5 Hash"; flow:established; fileext:"rar"; filestore; filemd5:clamav_md5; classtype: suspicious-filename-detect; sid:1010075; rev:2;)
reject tcp $HOME_NET any -> any any (msg:"CROISSANTS Malicious file - Clamav MD5 Hash"; flow:established; fileext:"tar.gz"; filestore; filemd5:clamav_md5; classtype: suspicious-filename-detect; sid:1010076; rev:2;)
reject tcp $HOME_NET any -> any any (msg:"CROISSANTS Malicious file - Clamav MD5 Hash"; flow:established; fileext:"7z"; filestore; filemd5:clamav_md5; classtype: suspicious-filename-detect; sid:1010077; rev:2;)

# next is 1010078

################################################

# 1050000-1999999 Reserved for CROISSANTS HTTP EVASION use
drop http $EXTERNAL_NET any -> $HOME_NET any (msg:"CROISSANTS HTTP EVASION (Chunked Header and HTTP/1.2)"; content:"HTTP/1.2 "; classtype:web-application-attack; priority:1; sid:1050000; rev:1;)
drop http $EXTERNAL_NET any -> $HOME_NET any (msg:"CROISSANTS HTTP EVASION (Chunked Header and HTTP/2.0)"; content:"HTTP/2.0 "; classtype:web-application-attack; priority:1; sid:1050001; rev:1;)
drop http $EXTERNAL_NET any -> $HOME_NET any (msg:"CROISSANTS HTTP EVASION (Chunked Header and HTTP/1.01)"; content:"HTTP/1.01 "; classtype:web-application-attack; priority:1; sid:1050002; rev:1;)
drop http $EXTERNAL_NET any -> $HOME_NET any (msg:"CROISSANTS HTTP EVASION (Chunked Header and HTTP/1.10)"; content:"HTTP/1.10 "; classtype:web-application-attack; priority:1; sid:1050003; rev:1;)
drop http $EXTERNAL_NET any -> $HOME_NET any (msg:"CROISSANTS HTTP EVASION (chunked x)"; content:"chunked x"; http_header; classtype:web-application-attack; priority:1; sid:1050004; rev:1;)
drop http $EXTERNAL_NET any -> $HOME_NET any (msg:"CROISSANTS HTTP EVASION (x chunked)"; content:"x chunked"; http_header; classtype:web-application-attack; priority:1; sid:1050005; rev:1;)
drop http $EXTERNAL_NET any -> $HOME_NET any (msg:"CROISSANTS HTTP EVASION (x-folding-chunked)"; content:"Transfer-Encoding: x "; classtype:web-application-attack; priority:1; sid:1050006; rev:1;)
drop http $EXTERNAL_NET any -> $HOME_NET any (msg:"CROISSANTS HTTP EVASION (Transfer-Encoding:<CR>chunked)"; content:"Transfer-Encoding: |0d|chunked|0d 0a|"; classtype:web-application-attack; priority:1; sid:1050007; rev:1;)
drop http $EXTERNAL_NET any -> $HOME_NET any (msg:"CROISSANTS HTTP EVASION (chunked-folding-x)"; content:"Transfer-Encoding: chunked |0d 0a| x|0d 0a|"; classtype:web-application-attack; priority:1; sid:1050008; rev:1;)
drop http $EXTERNAL_NET any -> $HOME_NET any (msg:"CROISSANTS HTTP EVASION (Transfer-Encoding:<CR><space>chunked)"; content:"Transfer-Encoding: |0d| chunked|0d 0a|"; classtype:web-application-attack; priority:1; sid:1050009; rev:1;)
drop http $EXTERNAL_NET any -> $HOME_NET any (msg:"CROISSANTS HTTP EVASION (Transfer-Encoding:chunked<CR><space>)"; content:"Transfer-Encoding: chunked|0d| |0d 0a|"; classtype:web-application-attack; priority:1; sid:1050010; rev:1;)
drop http $EXTERNAL_NET any -> $HOME_NET any (msg:"CROISSANTS HTTP EVASION (Transfer-Encoding::)"; content:"Transfer-Encoding:: "; classtype:web-application-attack; priority:1; sid:1050011; rev:1;)
drop http $EXTERNAL_NET any -> $HOME_NET any (msg:"CROISSANTS HTTP EVASION (content-encoding 'gzip x')"; content:"Content-Encoding:gzip x|0d 0a|"; classtype:web-application-attack; priority:1; sid:1050012; rev:1;)
drop http $EXTERNAL_NET any -> $HOME_NET any (msg:"CROISSANTS HTTP EVASION (content-encoding 'x gzip')"; content:"Content-Encoding:x gzip|0d 0a|"; classtype:web-application-attack; priority:1; sid:1050013; rev:1;)
drop http $EXTERNAL_NET any -> $HOME_NET any (msg:"CROISSANTS HTTP EVASION (content-encoding:foo)"; content:"Content-Encoding:foo|0d 0a|"; classtype:web-application-attack; priority:1; sid:1050014; rev:1;)
drop http $EXTERNAL_NET any -> $HOME_NET any (msg:"CROISSANTS HTTP EVASION (content-encoding:rfc2047(deflate))"; content:"Content-Encoding: =?UTF-8?B?ZGVmbGF0ZQo=?=|0d 0a|"; classtype:web-application-attack; priority:1; sid:1050015; rev:1;)
drop http $EXTERNAL_NET any -> $HOME_NET any (msg:"CROISSANTS HTTP EVASION (Content-Encoding:: deflate)"; content:"Content-Encoding:: deflate|0d 0a|"; classtype:web-application-attack; priority:1; sid:1050016; rev:1;)
drop http $EXTERNAL_NET any -> $HOME_NET any (msg:"CROISSANTS HTTP EVASION (Content-Encoding:: gzip)"; content:"Content-Encoding:: gzip|0d 0a|"; classtype:web-application-attack; priority:1; sid:1050017; rev:1;)
drop http $EXTERNAL_NET any -> $HOME_NET any (msg:"CROISSANTS HTTP EVASION (Content-Encoding:<CR>deflate)"; content:"Content-Encoding:|0d|deflate|0d 0a|"; classtype:web-application-attack; priority:1; sid:1050018; rev:2;)
drop http $EXTERNAL_NET any -> $HOME_NET any (msg:"CROISSANTS HTTP EVASION (Content-Encoding:<CR><space>deflate)"; content:"Content-Encoding:|0d| deflate|0d 0a|"; classtype:web-application-attack; priority:1; sid:1050019; rev:2;)
drop http $EXTERNAL_NET any -> $HOME_NET any (msg:"CROISSANTS HTTP EVASION (Content-Encoding:<CR>gzip)"; content:"Content-Encoding:|0d|gzip|0d 0a|"; classtype:web-application-attack; priority:1; sid:1050020; rev:1;)
drop http $EXTERNAL_NET any -> $HOME_NET any (msg:"CROISSANTS HTTP EVASION (Content-Encoding:<CR><space>gzip)"; content:"Content-Encoding:|0d| gzip|0d 0a|"; classtype:web-application-attack; priority:1; sid:1050021; rev:1;)
drop http $EXTERNAL_NET any -> $HOME_NET any (msg:"CROISSANTS HTTP EVASION (Transfer-Encoding:chunked\r\n177\r\n)"; content:"Transfer-Encoding: chunked|0d 0a 7f 0d 0a|"; classtype:web-application-attack; priority:1; sid:1050022; rev:2;)
drop http $EXTERNAL_NET any -> $HOME_NET any (msg:"CROISSANTS HTTP EVASION (<space>Transfer-Encoding: chunked)"; content:" Transfer-Encoding: chunked|0d 0a|"; classtype:web-application-attack; priority:1; sid:1050023; rev:1;)
drop http $EXTERNAL_NET any -> $HOME_NET any (msg:"CROISSANTS HTTP EVASION (<tab>Transfer-Encoding: chunked)"; content:"|09|Transfer-Encoding: chunked|0d 0a|"; classtype:web-application-attack; priority:1; sid:1050024; rev:1;)
drop http $EXTERNAL_NET any -> $HOME_NET any (msg:"CROISSANTS HTTP EVASION (\000Transfer-Encoding: chunked)"; content:"|00|Transfer-Encoding: chunked|0d 0a|"; classtype:web-application-attack; priority:1; sid:1050025; rev:1;)
drop http $EXTERNAL_NET any -> $HOME_NET any (msg:"CROISSANTS HTTP EVASION (TE chunked prefixed with <CR><CR>)"; content:"|0d 0d|Transfer-Encoding: chunked|0d 0a|"; classtype:web-application-attack; priority:1; sid:1050026; rev:1;)
drop http $EXTERNAL_NET any -> $HOME_NET any (msg:"CROISSANTS HTTP EVASION (TE chunked prefixed with <CR><space><CR>)"; content:"|0d 20 0d|Transfer-Encoding: chunked|0d 0a|"; classtype:web-application-attack; priority:1; sid:1050027; rev:1;)
drop http $EXTERNAL_NET any -> $HOME_NET any (msg:"CROISSANTS HTTP EVASION (Transfer-Encoding:,chunked)"; content:"Transfer-Encoding:,chunked|0d 0a|"; classtype:web-application-attack; priority:1; sid:1050028; rev:1;)
drop http $EXTERNAL_NET any -> $HOME_NET any (msg:"CROISSANTS HTTP EVASION (Transfer-Encoding:chunked,)"; content:"Transfer-Encoding:chunked,|0d 0a|"; classtype:web-application-attack; priority:1; sid:1050029; rev:1;)
drop http $EXTERNAL_NET any -> $HOME_NET any (msg:"CROISSANTS HTTP EVASION (Transfer-Encoding:chunked\000)"; content:"Transfer-Encoding:chunked|00 0d 0a|"; classtype:web-application-attack; priority:1; sid:1050030; rev:1;)
drop http $EXTERNAL_NET any -> $HOME_NET any (msg:"CROISSANTS HTTP EVASION (Content-Encoding:,gzip)"; content:"Content-Encoding:,gzip|0d 0a|"; classtype:web-application-attack; priority:1; sid:1050031; rev:1;)
drop http $EXTERNAL_NET any -> $HOME_NET any (msg:"CROISSANTS HTTP EVASION (Content-Encoding:gzip,)"; content:"Content-Encoding:gzip,|0d 0a|"; classtype:web-application-attack; priority:1; sid:1050032; rev:1;)
drop http $EXTERNAL_NET any -> $HOME_NET any (msg:"CROISSANTS HTTP EVASION (Content-Encoding:gzip\000)"; content:"Content-Encoding:gzip|00 0d 0a|"; classtype:web-application-attack; priority:1; sid:1050033; rev:1;)
drop http $EXTERNAL_NET any -> $HOME_NET any (msg:"CROISSANTS HTTP EVASION (Content-Encoding:,deflate)"; content:"Content-Encoding:,deflate|0d 0a|"; classtype:web-application-attack; priority:1; sid:1050034; rev:1;)
drop http $EXTERNAL_NET any -> $HOME_NET any (msg:"CROISSANTS HTTP EVASION (Content-Encoding:deflate,)"; content:"Content-Encoding:deflate,|0d 0a|"; classtype:web-application-attack; priority:1; sid:1050035; rev:1;)
drop http $EXTERNAL_NET any -> $HOME_NET any (msg:"CROISSANTS HTTP EVASION (Content-Encoding:deflate\000)"; content:"Content-Encoding:deflate|00 0d 0a|"; classtype:web-application-attack; priority:1; sid:1050036; rev:1;)
drop http $EXTERNAL_NET any -> $HOME_NET any (msg:"CROISSANTS HTTP EVASION (HTTP/1.00)"; content:"HTTP/1.00"; classtype:web-application-attack; priority:1; sid:1050037; rev:1;)
drop http $EXTERNAL_NET any -> $HOME_NET any (msg:"CROISSANTS HTTP EVASION (HTTP/1.1+<tab>)"; content:"HTTP/1.1|09|"; classtype:web-application-attack; priority:1; sid:1050038; rev:1;)
drop http $EXTERNAL_NET any -> $HOME_NET any (msg:"CROISSANTS HTTP EVASION (HTTP/1.1\n)"; content:"HTTP/1.1|0a|"; classtype:web-application-attack; priority:1; sid:1050039; rev:1;)
drop http $EXTERNAL_NET any -> $HOME_NET any (msg:"CROISSANTS HTTP EVASION (HTTP/1.010)"; content:"HTTP/1.010"; classtype:web-application-attack; priority:1; sid:1050040; rev:1;)
drop http $EXTERNAL_NET any -> $HOME_NET any (msg:"CROISSANTS HTTP EVASION ('H' before header)"; content:"HHTTP/1.1"; classtype:web-application-attack; priority:1; sid:1050041; rev:1;)
drop http $EXTERNAL_NET any -> $HOME_NET any (msg:"CROISSANTS HTTP EVASION ('HT' before header)"; content:"HTHTTP/1.1"; classtype:web-application-attack; priority:1; sid:1050042; rev:1;)
drop http $EXTERNAL_NET any -> $HOME_NET any (msg:"CROISSANTS HTTP EVASION ('HTT' before header)"; content:"HTTHTTP/1.1"; classtype:web-application-attack; priority:1; sid:1050043; rev:1;)
drop http $EXTERNAL_NET any -> $HOME_NET any (msg:"CROISSANTS HTTP EVASION ('HTTX' before header)"; content:"HTTXHTTP/1.1"; classtype:web-application-attack; priority:1; sid:1050044; rev:1;)
drop http $EXTERNAL_NET any -> $HOME_NET any (msg:"CROISSANTS HTTP EVASION (invalid status code with non-digits (2xx))"; content:"HTTP/1.1 2xx "; classtype:web-application-attack; priority:1; sid:1050045; rev:1;)
drop http $EXTERNAL_NET any -> $HOME_NET any (msg:"CROISSANTS HTTP EVASION (invalid status code with non-digits (20x))"; content:"HTTP/1.1 20x "; classtype:web-application-attack; priority:1; sid:1050046; rev:1;)
drop http $EXTERNAL_NET any -> $HOME_NET any (msg:"CROISSANTS HTTP EVASION (invalid status code with only single digit (2))"; content:"HTTP/1.1 2 "; classtype:web-application-attack; priority:1; sid:1050047; rev:1;)
drop http $EXTERNAL_NET any -> $HOME_NET any (msg:"CROISSANTS HTTP EVASION (invalid status code with two digits (20))"; content:"HTTP/1.1 20 "; classtype:web-application-attack; priority:1; sid:1050048; rev:1;)
drop http $EXTERNAL_NET any -> $HOME_NET any (msg:"CROISSANTS HTTP EVASION (invalid status code with too much digits (2000))"; content:"HTTP/1.1 2000 "; classtype:web-application-attack; priority:1; sid:1050049; rev:1;)
drop http $EXTERNAL_NET any -> $HOME_NET any (msg:"CROISSANTS HTTP EVASION (invalid status code with numeric (0200))"; content:"HTTP/1.1 0200 "; classtype:web-application-attack; priority:1; sid:1050050; rev:1;)
drop http $EXTERNAL_NET any -> $HOME_NET any (msg:"CROISSANTS HTTP EVASION (invalid status code with space+200)"; content:"HTTP/1.1|20 20|200 "; classtype:web-application-attack; priority:1; sid:1050051; rev:1;)
drop http $EXTERNAL_NET any -> $HOME_NET any (msg:"CROISSANTS HTTP EVASION (invalid status code with tab+200)"; content:"HTTP/1.1|20 09|200 "; classtype:web-application-attack; priority:1; sid:1050052; rev:1;)
drop http $EXTERNAL_NET any -> $HOME_NET any (msg:"CROISSANTS HTTP EVASION (invalid status code with 2040)"; content:"HTTP/1.1|20|2040 "; classtype:web-application-attack; priority:1; sid:1050053; rev:1;)
drop http $EXTERNAL_NET any -> $HOME_NET any (msg:"CROISSANTS HTTP EVASION (invalid status code with 3040)"; content:"HTTP/1.1|20|3040 "; classtype:web-application-attack; priority:1; sid:1050054; rev:1;)

# next sid is 1050055

############################################

# HTTP event  rules
#
# SID's fall in the 2221000+ range. See http://doc.emergingthreats.net/bin/view/Main/SidAllocation
#
# These sigs fire at most once per HTTP transaction.
#
# A flowint http.anomaly.count is incremented for each match. By default it will be 0.
#
#drop http any any -> any any (msg:"SURICATA HTTP unknown error"; flow:established; app-layer-event:http.unknown_error; flowint:http.anomaly.count,+,1; classtype:protocol-command-decode; sid:2221000; rev:1;)
#drop http any any -> any any (msg:"SURICATA HTTP gzip decompression failed"; flow:established; app-layer-event:http.gzip_decompression_failed; flowint:http.anomaly.count,+,1; classtype:protocol-command-decode; sid:2221001; rev:1;)
#drop http any any -> any any (msg:"SURICATA HTTP request field missing colon"; flow:established,to_server; app-layer-event:http.request_field_missing_colon; flowint:http.anomaly.count,+,1; classtype:protocol-command-decode; sid:2221002; rev:1;)
#drop http any any -> any any (msg:"SURICATA HTTP response field missing colon"; flow:established,to_client; app-layer-event:http.response_field_missing_colon; flowint:http.anomaly.count,+,1; classtype:protocol-command-decode; sid:2221020; rev:1;)
#drop http any any -> any any (msg:"SURICATA HTTP invalid request chunk len"; flow:established,to_server; app-layer-event:http.invalid_request_chunk_len; flowint:http.anomaly.count,+,1; classtype:protocol-command-decode; sid:2221003; rev:1;)
#drop http any any -> any any (msg:"SURICATA HTTP invalid response chunk len"; flow:established,to_client; app-layer-event:http.invalid_response_chunk_len; flowint:http.anomaly.count,+,1; classtype:protocol-command-decode; sid:2221004; rev:1;)
#drop http any any -> any any (msg:"SURICATA HTTP invalid transfer encoding value in request"; flow:established,to_server; app-layer-event:http.invalid_transfer_encoding_value_in_request; flowint:http.anomaly.count,+,1; classtype:protocol-command-decode; sid:2221005; rev:1;)
#drop http any any -> any any (msg:"SURICATA HTTP invalid transfer encoding value in response"; flow:established,to_client; app-layer-event:http.invalid_transfer_encoding_value_in_response; flowint:http.anomaly.count,+,1; classtype:protocol-command-decode; sid:2221006; rev:1;)
#drop http any any -> any any (msg:"SURICATA HTTP invalid content length field in request"; flow:established,to_server; app-layer-event:http.invalid_content_length_field_in_request; flowint:http.anomaly.count,+,1; classtype:protocol-command-decode; sid:2221007; rev:1;)
#drop http any any -> any any (msg:"SURICATA HTTP invalid content length field in response"; flow:established,to_client; app-layer-event:http.invalid_content_length_field_in_response; flowint:http.anomaly.count,+,1; classtype:protocol-command-decode; sid:2221008; rev:1;)
#drop http any any -> any any (msg:"SURICATA HTTP status 100-Continue already seen"; flow:established,to_client; app-layer-event:http.100_continue_already_seen; flowint:http.anomaly.count,+,1; classtype:protocol-command-decode; sid:2221009; rev:1;)
#drop http any any -> any any (msg:"SURICATA HTTP unable to match response to request"; flow:established,to_client; app-layer-event:http.unable_to_match_response_to_request; flowint:http.anomaly.count,+,1; classtype:protocol-command-decode; sid:2221010; rev:1;)
#drop http any any -> any any (msg:"SURICATA HTTP invalid server port in request"; flow:established,to_server; app-layer-event:http.invalid_server_port_in_request; flowint:http.anomaly.count,+,1; classtype:protocol-command-decode; sid:2221011; rev:1;)
#drop http any any -> any any (msg:"SURICATA HTTP invalid authority port"; flow:established; app-layer-event:http.invalid_authority_port; flowint:http.anomaly.count,+,1; classtype:protocol-command-decode; sid:2221012; rev:1;)
#drop http any any -> any any (msg:"SURICATA HTTP request header invalid"; flow:established,to_server; app-layer-event:http.request_header_invalid; flowint:http.anomaly.count,+,1; classtype:protocol-command-decode; sid:2221013; rev:1;)
#drop http any any -> any any (msg:"SURICATA HTTP response header invalid"; flow:established,to_client; app-layer-event:http.response_header_invalid; flowint:http.anomaly.count,+,1; classtype:protocol-command-decode; sid:2221021; rev:1;)
#drop http any any -> any any (msg:"SURICATA HTTP missing Host header"; flow:established,to_server; app-layer-event:http.missing_host_header; flowint:http.anomaly.count,+,1; classtype:protocol-command-decode; sid:2221014; rev:1;)
# Alert if hostname is both part of URL and Host header and they are not the same.
#drop http any any -> any any (msg:"SURICATA HTTP Host header ambiguous"; flow:established,to_server; app-layer-event:http.host_header_ambiguous; flowint:http.anomaly.count,+,1; classtype:protocol-command-decode; sid:2221015; rev:1;)
#drop http any any -> any any (msg:"SURICATA HTTP invalid request field folding"; flow:established,to_server; app-layer-event:http.invalid_request_field_folding; flowint:http.anomaly.count,+,1; classtype:protocol-command-decode; sid:2221016; rev:1;)
#drop http any any -> any any (msg:"SURICATA HTTP invalid response field folding"; flow:established,to_client; app-layer-event:http.invalid_response_field_folding; flowint:http.anomaly.count,+,1; classtype:protocol-command-decode; sid:2221017; rev:1;)
#drop http any any -> any any (msg:"SURICATA HTTP request buffer too long"; flow:established,to_server; app-layer-event:http.request_field_too_long; flowint:http.anomaly.count,+,1; classtype:protocol-command-decode; sid:2221018; rev:1;)
#drop http any any -> any any (msg:"SURICATA HTTP response buffer too long"; flow:established,to_client; app-layer-event:http.response_field_too_long; flowint:http.anomaly.count,+,1; classtype:protocol-command-decode; sid:2221019; rev:1;)
# Multipart parser detected generic error.
#drop http any any -> any any (msg:"SURICATA HTTP multipart generic error"; flow:established,to_server; app-layer-event:http.multipart_generic_error; flowint:http.anomaly.count,+,1; classtype:protocol-command-decode; sid:2221022; rev:1;)
# Multipart header claiming a file to present, but no actual filedata available.
#drop http any any -> any any (msg:"SURICATA HTTP multipart no filedata"; flow:established,to_server; app-layer-event:http.multipart_no_filedata; flowint:http.anomaly.count,+,1; classtype:protocol-command-decode; sid:2221023; rev:1;)
# Multipart header invalid.
#drop http any any -> any any (msg:"SURICATA HTTP multipart invalid header"; flow:established,to_server; app-layer-event:http.multipart_invalid_header; flowint:http.anomaly.count,+,1; classtype:protocol-command-decode; sid:2221024; rev:1;)
# Warn when the port in the Host: header doesn't match the actual TCP Server port.
#drop http any any -> any any (msg:"SURICATA HTTP request server port doesn't match TCP port"; flow:established,to_server; app-layer-event:http.request_server_port_tcp_port_mismatch; flowint:http.anomaly.count,+,1; classtype:protocol-command-decode; sid:2221026; rev:1;)
# Host part of URI is invalid
#drop http any any -> any any (msg:"SURICATA HTTP Host part of URI is invalid"; flow:established,to_server; app-layer-event:http.request_uri_host_invalid; flowint:http.anomaly.count,+,1; classtype:protocol-command-decode; sid:2221027; rev:1;)
# Host header is invalid
#drop http any any -> any any (msg:"SURICATA HTTP Host header invalid"; flow:established,to_server; app-layer-event:http.request_header_host_invalid; flowint:http.anomaly.count,+,1; classtype:protocol-command-decode; sid:2221028; rev:1;)
# URI is terminated by non-compliant characters. RFC allows for space (0x20), but many implementations permit others like tab and more.
#drop http any any -> any any (msg:"SURICATA HTTP URI terminated by non-compliant character"; flow:established,to_server; app-layer-event:http.uri_delim_non_compliant; flowint:http.anomaly.count,+,1; classtype:protocol-command-decode; sid:2221029; rev:1;)
# Method is terminated by non-compliant characters. RFC allows for space (0x20), but many implementations permit others like tab and more.
#drop http any any -> any any (msg:"SURICATA HTTP METHOD terminated by non-compliant character"; flow:established,to_server; app-layer-event:http.method_delim_non_compliant; flowint:http.anomaly.count,+,1; classtype:protocol-command-decode; sid:2221030; rev:1;)
# Request line started with whitespace
#drop http any any -> any any (msg:"SURICATA HTTP Request line with leading whitespace"; flow:established,to_server; app-layer-event:http.request_line_leading_whitespace; flowint:http.anomaly.count,+,1; classtype:protocol-command-decode; sid:2221031; rev:1;)

# next sid 2221032
